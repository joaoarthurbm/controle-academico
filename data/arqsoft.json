{"nome": "Arquitetura de Software",
                    "aulas" : [
  {
    "data": "24/07/2023",
    "creditos": 2,
    "assunto": "Introdução ao curso"
  },
  {
    "data": "27/07/2023",
    "creditos": 2,
    "assunto": "O que é arquitetura de software?"
  },
  {
    "data": "31/07/2023",
    "creditos": 2,
    "assunto": "O modelo de visões arquiteturais"
  },
  {
    "data": "03/08/2023",
    "creditos": 2,
    "assunto": "RFC + O modelo C4"
  },
  {
    "data": "07/08/2023",
    "creditos": 2,
    "assunto": "RFC + O modelo C4"
  },
  {
    "data": "10/08/2023",
    "creditos": 2,
    "assunto": "Estilos Arquiteturais"
  },
  {
    "data": "14/08/2023",
    "creditos": 2,
    "assunto": "Estilos Arquiteturais"
  },
  {
    "data": "17/08/2023",
    "creditos": 2,
    "assunto": "Estilos Arquiteturais"
  },
  {
    "data": "21/08/2023",
    "creditos": 2,
    "assunto": "Estilos Arquiteturais"
  },
  {
    "data": "24/08/2023",
    "creditos": 2,
    "assunto": "Grandes preocupações: Desempenho e Escalabilidade"
  },
  {
    "data": "28/08/2023",
    "creditos": 2,
    "assunto": "Grandes preocupações: Desempenho e Escalabilidade"
  },
  {
    "data": "31/08/2023",
    "creditos": 2,
    "assunto": "Grandes preocupações: Segurança"
  },
  {
    "data": "04/09/2023",
    "creditos": 2,
    "assunto": "Grandes preocupações: Segurança"
  },
  {
    "data": "11/09/2023",
    "creditos": 2,
    "assunto": "Grandes preocupações: Confiabilidade (Reliability)"
  },
  {
    "data": "14/09/2023",
    "creditos": 2,
    "assunto": "Grandes preocupações: Complexidade/Simplicidade/Modularidade"
  },
  {
    "data": "18/09/2023",
    "creditos": 2,
    "assunto": "Definição dos projetos"
  },
  {
    "data": "21/09/2023",
    "creditos": 2,
    "assunto": "Definição dos projetos"
  },
  {
    "data": "25/09/2023",
    "creditos": 2,
    "assunto": "Acompanhamento de Projetos"
  },
  {
    "data": "28/09/2023",
    "creditos": 2,
    "assunto": "Acompanhamento de Projetos"
  },
  {
    "data": "02/10/2023",
    "creditos": 2,
    "assunto": "Acompanhamento de Projetos"
  },
  {
    "data": "05/10/2023",
    "creditos": 2,
    "assunto": "Acompanhamento de Projetos"
  },
  {
    "data": "09/10/2023",
    "creditos": 2,
    "assunto": "Acompanhamento de Projetos"
  },
  {
    "data": "16/10/2023",
    "creditos": 2,
    "assunto": "Acompanhamento de Projetos"
  },
  {
    "data": "19/10/2023",
    "creditos": 2,
    "assunto": "Acompanhamento de Projetos"
  },
  {
    "data": "23/10/2023",
    "creditos": 2,
    "assunto": "Apresentações: Grupos 1, 2 e 3"
  },
  {
    "data": "26/10/2023",
    "creditos": 2,
    "assunto": "Apresentações: Grupos 4, 5 e 6"
  },
  {
    "data": "30/10/2023",
    "creditos": 2,
    "assunto": "Apresentações: Grupos 7, 8 e 9"
  },
  {
    "data": "06/11/2023",
    "creditos": 2,
    "assunto": "Avaliação Parcial de Projeto"
  },
  {
    "data": "09/11/2023",
    "creditos": 2,
    "assunto": "Avaliação Final de Projeto"
  }
],
                    "codigo": "1411305",
                    "plano" : {"ementa": "Introdução à arquitetura de software. Modelo de visões Arquiteturais. Documentação arquitetural. Estilos, padrões e estratégias arquiteturais. Avaliação e Verificação arquitetural.

",         
                               "objetivos": "Ao final deste curso você será capaz de:

* Debater sobre diferentes definições de arquitetura de software;
* Descrever a arquitetura de sistemas utilizando o modelo C4 e o modelo de visões arquiteturais;
* Identificar, compreender e escrever sobre os principais estilos e padrões arquiteturais;
* Compreender, aplicar e propor métodos de avaliação arquitetural.",
                               "conteudo": "Introdução à arquitetura de software; o modelo de visões arquiteturais; o modelo c4; documentação arquitetural; cliente-servidor, monolito e microsserviços; P2P e Broker; MVC e REST; plugins, pipes-and-filter e microkernel; publish-subscribe; avaliação arquitetural e verificação arquitetural.",
                               "metodologia": "Aula expositiva e apresentação do desafio; Oficinas e Apresentação de resolução de problemas.

.",
                               "avaliacao": "Diferentemente da organização clássica em três estágios, cada iteração será avaliada com uma nota. As iterações possuem dois momentos de entregas: parciais e finais. Os pesos entre essas entregas são definidos de acordo com o progresso da iteração. A ideia é incentivar que o trabalho seja realizado de maneira incremental e que o esforço seja uniformizado durante o período. O componente de maior peso na nota será o relatório em que os alunos devem descrever a resolução do problema, técnicas utilizadas e discussão sobre os resultados. Como o sistema tradicional de avaliação requer que a formatação do curso tenha 3 notas, elas são divididas da seguinte maneira.

Nota 1. O módulo 1 possui apenas uma iteração com 3 entregas parciais e uma final.

Nota 2. O módulo 2 possui 4 iterações com pesos iguais. Cada uma com 2 entregas parciais e uma final.

Nota 3. O módulo 3 possui apenas uma iteração com 3 entregas parciais e uma final.

A nota final na disciplina é a média entre as Notas 1, 2 e 3.

As atividades do módulo 1 e 3 são em grupo, enquanto as atividades do módulo 2 são individuais.",
                               "referencias": "Básica
Brown, Simon. The art of visualising software architecture: communicating software architecture with sketches, diagrams and the C4 model.

Rozanski, Nick, and Eóin Woods. Software systems architecture: working with stakeholders using viewpoints and perspectives. Addison-Wesley, 2012.

Complementar
Kruchten, Philippe. ¿Reference: Title: Architectural Blueprints¿The ¿4+ 1¿ View Model of Software Architecture.¿ IEEE software 12 (1995): 6.

Clements, Paul, et al. Documenting software architectures: views and beyond. Pearson Education, 2002.

Amy Brown and Greg Wilson (editors). The Architecture of Open Source Applications. Volumes 1-2, 2012.

Bass, Len, Paul Clements, and Rick Kazman. Software architecture in practice. Addison-Wesley Professional, 2003.

Brooks Jr, Frederick P. ¿The mythical man-month (anniversary ed.)¿, 1995.

Fairbanks, George. Just enough software architecture: a risk-driven approach. Marshall & Brainerd, 2010.

Mary, Shaw, and Garlan David. ¿Software Architecture: Perspectives on an Emerging Discipline.¿ Prentice-Hall (1996).

Rechtin, Eberhardt. ¿Systems Architecting-Creating & Building Complex Systems, 1991, 333 pages.¿

Keeling, Michael. Design It!: From Programmer to Software Architect. Pragmatic Bookshelf, 2017.

Gamma, Erich. Design patterns: elements of reusable object-oriented software. Pearson Education India, 1995.

Gorton, Ian. Essential software architecture. Springer Science & Business Media, 2006."
                              }
           }
